// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: internal/core/grpc/CenturyGolemEdition.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCardMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId int32 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *GetCardMessage) Reset() {
	*x = GetCardMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCardMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCardMessage) ProtoMessage() {}

func (x *GetCardMessage) ProtoReflect() protoreflect.Message {
	mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCardMessage.ProtoReflect.Descriptor instead.
func (*GetCardMessage) Descriptor() ([]byte, []int) {
	return file_internal_core_grpc_CenturyGolemEdition_proto_rawDescGZIP(), []int{0}
}

func (x *GetCardMessage) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

type GemValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Yellow int32 `protobuf:"varint,1,opt,name=yellow,proto3" json:"yellow,omitempty"`
	Green  int32 `protobuf:"varint,2,opt,name=green,proto3" json:"green,omitempty"`
	Blue   int32 `protobuf:"varint,3,opt,name=blue,proto3" json:"blue,omitempty"`
	Pink   int32 `protobuf:"varint,4,opt,name=pink,proto3" json:"pink,omitempty"`
}

func (x *GemValues) Reset() {
	*x = GemValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GemValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GemValues) ProtoMessage() {}

func (x *GemValues) ProtoReflect() protoreflect.Message {
	mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GemValues.ProtoReflect.Descriptor instead.
func (*GemValues) Descriptor() ([]byte, []int) {
	return file_internal_core_grpc_CenturyGolemEdition_proto_rawDescGZIP(), []int{1}
}

func (x *GemValues) GetYellow() int32 {
	if x != nil {
		return x.Yellow
	}
	return 0
}

func (x *GemValues) GetGreen() int32 {
	if x != nil {
		return x.Green
	}
	return 0
}

func (x *GemValues) GetBlue() int32 {
	if x != nil {
		return x.Blue
	}
	return 0
}

func (x *GemValues) GetPink() int32 {
	if x != nil {
		return x.Pink
	}
	return 0
}

type GemCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	In       *GemValues `protobuf:"bytes,1,opt,name=in,proto3" json:"in,omitempty"`
	Out      *GemValues `protobuf:"bytes,2,opt,name=out,proto3" json:"out,omitempty"`
	Upgrades int32      `protobuf:"varint,3,opt,name=upgrades,proto3" json:"upgrades,omitempty"`
}

func (x *GemCard) Reset() {
	*x = GemCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GemCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GemCard) ProtoMessage() {}

func (x *GemCard) ProtoReflect() protoreflect.Message {
	mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GemCard.ProtoReflect.Descriptor instead.
func (*GemCard) Descriptor() ([]byte, []int) {
	return file_internal_core_grpc_CenturyGolemEdition_proto_rawDescGZIP(), []int{2}
}

func (x *GemCard) GetIn() *GemValues {
	if x != nil {
		return x.In
	}
	return nil
}

func (x *GemCard) GetOut() *GemValues {
	if x != nil {
		return x.Out
	}
	return nil
}

func (x *GemCard) GetUpgrades() int32 {
	if x != nil {
		return x.Upgrades
	}
	return 0
}

type GolemCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cost   *GemValues `protobuf:"bytes,1,opt,name=cost,proto3" json:"cost,omitempty"`
	Points int32      `protobuf:"varint,2,opt,name=points,proto3" json:"points,omitempty"`
}

func (x *GolemCard) Reset() {
	*x = GolemCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GolemCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GolemCard) ProtoMessage() {}

func (x *GolemCard) ProtoReflect() protoreflect.Message {
	mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GolemCard.ProtoReflect.Descriptor instead.
func (*GolemCard) Descriptor() ([]byte, []int) {
	return file_internal_core_grpc_CenturyGolemEdition_proto_rawDescGZIP(), []int{3}
}

func (x *GolemCard) GetCost() *GemValues {
	if x != nil {
		return x.Cost
	}
	return nil
}

func (x *GolemCard) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

type CreateGameMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerCount int32 `protobuf:"varint,1,opt,name=player_count,json=playerCount,proto3" json:"player_count,omitempty"`
}

func (x *CreateGameMessage) Reset() {
	*x = CreateGameMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameMessage) ProtoMessage() {}

func (x *CreateGameMessage) ProtoReflect() protoreflect.Message {
	mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameMessage.ProtoReflect.Descriptor instead.
func (*CreateGameMessage) Descriptor() ([]byte, []int) {
	return file_internal_core_grpc_CenturyGolemEdition_proto_rawDescGZIP(), []int{4}
}

func (x *CreateGameMessage) GetPlayerCount() int32 {
	if x != nil {
		return x.PlayerCount
	}
	return 0
}

type CreateGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameState *GameState `protobuf:"bytes,1,opt,name=game_state,json=gameState,proto3" json:"game_state,omitempty"`
}

func (x *CreateGameResponse) Reset() {
	*x = CreateGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameResponse) ProtoMessage() {}

func (x *CreateGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameResponse.ProtoReflect.Descriptor instead.
func (*CreateGameResponse) Descriptor() ([]byte, []int) {
	return file_internal_core_grpc_CenturyGolemEdition_proto_rawDescGZIP(), []int{5}
}

func (x *CreateGameResponse) GetGameState() *GameState {
	if x != nil {
		return x.GameState
	}
	return nil
}

type GameState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtherPlayers  []*Player    `protobuf:"bytes,1,rep,name=other_players,json=otherPlayers,proto3" json:"other_players,omitempty"`
	GemLineup     []*GemCard   `protobuf:"bytes,2,rep,name=gem_lineup,json=gemLineup,proto3" json:"gem_lineup,omitempty"`
	GemDeckSize   int32        `protobuf:"varint,3,opt,name=gem_deck_size,json=gemDeckSize,proto3" json:"gem_deck_size,omitempty"`
	GolemLineup   []*GolemCard `protobuf:"bytes,4,rep,name=golem_lineup,json=golemLineup,proto3" json:"golem_lineup,omitempty"`
	GolemDeckSize int32        `protobuf:"varint,5,opt,name=golem_deck_size,json=golemDeckSize,proto3" json:"golem_deck_size,omitempty"`
	PlayerGems    []*GemValues `protobuf:"bytes,6,rep,name=player_gems,json=playerGems,proto3" json:"player_gems,omitempty"`
	GoldCoins     int32        `protobuf:"varint,7,opt,name=gold_coins,json=goldCoins,proto3" json:"gold_coins,omitempty"`
	SilverCoins   int32        `protobuf:"varint,8,opt,name=silver_coins,json=silverCoins,proto3" json:"silver_coins,omitempty"`
	Player        *Player      `protobuf:"bytes,9,opt,name=player,proto3" json:"player,omitempty"`
}

func (x *GameState) Reset() {
	*x = GameState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameState) ProtoMessage() {}

func (x *GameState) ProtoReflect() protoreflect.Message {
	mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameState.ProtoReflect.Descriptor instead.
func (*GameState) Descriptor() ([]byte, []int) {
	return file_internal_core_grpc_CenturyGolemEdition_proto_rawDescGZIP(), []int{6}
}

func (x *GameState) GetOtherPlayers() []*Player {
	if x != nil {
		return x.OtherPlayers
	}
	return nil
}

func (x *GameState) GetGemLineup() []*GemCard {
	if x != nil {
		return x.GemLineup
	}
	return nil
}

func (x *GameState) GetGemDeckSize() int32 {
	if x != nil {
		return x.GemDeckSize
	}
	return 0
}

func (x *GameState) GetGolemLineup() []*GolemCard {
	if x != nil {
		return x.GolemLineup
	}
	return nil
}

func (x *GameState) GetGolemDeckSize() int32 {
	if x != nil {
		return x.GolemDeckSize
	}
	return 0
}

func (x *GameState) GetPlayerGems() []*GemValues {
	if x != nil {
		return x.PlayerGems
	}
	return nil
}

func (x *GameState) GetGoldCoins() int32 {
	if x != nil {
		return x.GoldCoins
	}
	return 0
}

func (x *GameState) GetSilverCoins() int32 {
	if x != nil {
		return x.SilverCoins
	}
	return 0
}

func (x *GameState) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

type PlayGemCardMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId    int32      `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Card      *GemCard   `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
	Discarded *GemValues `protobuf:"bytes,3,opt,name=discarded,proto3" json:"discarded,omitempty"`
}

func (x *PlayGemCardMessage) Reset() {
	*x = PlayGemCardMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayGemCardMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayGemCardMessage) ProtoMessage() {}

func (x *PlayGemCardMessage) ProtoReflect() protoreflect.Message {
	mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayGemCardMessage.ProtoReflect.Descriptor instead.
func (*PlayGemCardMessage) Descriptor() ([]byte, []int) {
	return file_internal_core_grpc_CenturyGolemEdition_proto_rawDescGZIP(), []int{7}
}

func (x *PlayGemCardMessage) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *PlayGemCardMessage) GetCard() *GemCard {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *PlayGemCardMessage) GetDiscarded() *GemValues {
	if x != nil {
		return x.Discarded
	}
	return nil
}

type PlayGemCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameState *GameState `protobuf:"bytes,2,opt,name=game_state,json=gameState,proto3" json:"game_state,omitempty"`
}

func (x *PlayGemCardResponse) Reset() {
	*x = PlayGemCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayGemCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayGemCardResponse) ProtoMessage() {}

func (x *PlayGemCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayGemCardResponse.ProtoReflect.Descriptor instead.
func (*PlayGemCardResponse) Descriptor() ([]byte, []int) {
	return file_internal_core_grpc_CenturyGolemEdition_proto_rawDescGZIP(), []int{8}
}

func (x *PlayGemCardResponse) GetGameState() *GameState {
	if x != nil {
		return x.GameState
	}
	return nil
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoldCoins   int32        `protobuf:"varint,1,opt,name=gold_coins,json=goldCoins,proto3" json:"gold_coins,omitempty"`
	SilverCoins int32        `protobuf:"varint,2,opt,name=silver_coins,json=silverCoins,proto3" json:"silver_coins,omitempty"`
	Gems        *GemValues   `protobuf:"bytes,3,opt,name=gems,proto3" json:"gems,omitempty"`
	Golems      []*GolemCard `protobuf:"bytes,4,rep,name=golems,proto3" json:"golems,omitempty"`
	Hand        []*GemCard   `protobuf:"bytes,5,rep,name=hand,proto3" json:"hand,omitempty"`
	DiscardPile []*GemCard   `protobuf:"bytes,6,rep,name=discard_pile,json=discardPile,proto3" json:"discard_pile,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_internal_core_grpc_CenturyGolemEdition_proto_rawDescGZIP(), []int{9}
}

func (x *Player) GetGoldCoins() int32 {
	if x != nil {
		return x.GoldCoins
	}
	return 0
}

func (x *Player) GetSilverCoins() int32 {
	if x != nil {
		return x.SilverCoins
	}
	return 0
}

func (x *Player) GetGems() *GemValues {
	if x != nil {
		return x.Gems
	}
	return nil
}

func (x *Player) GetGolems() []*GolemCard {
	if x != nil {
		return x.Golems
	}
	return nil
}

func (x *Player) GetHand() []*GemCard {
	if x != nil {
		return x.Hand
	}
	return nil
}

func (x *Player) GetDiscardPile() []*GemCard {
	if x != nil {
		return x.DiscardPile
	}
	return nil
}

var File_internal_core_grpc_CenturyGolemEdition_proto protoreflect.FileDescriptor

var file_internal_core_grpc_CenturyGolemEdition_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2f, 0x43, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x79, 0x47, 0x6f, 0x6c, 0x65,
	0x6d, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04,
	0x67, 0x72, 0x70, 0x63, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22,
	0x61, 0x0a, 0x09, 0x47, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x79, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x69,
	0x6e, 0x6b, 0x22, 0x69, 0x0a, 0x07, 0x47, 0x65, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a,
	0x02, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x02, 0x69, 0x6e, 0x12, 0x21,
	0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x03, 0x6f, 0x75,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0x48, 0x0a,
	0x09, 0x47, 0x6f, 0x6c, 0x65, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x36, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x44, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x86, 0x03, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x0d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x0a, 0x67, 0x65, 0x6d, 0x5f, 0x6c, 0x69,
	0x6e, 0x65, 0x75, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x52, 0x09, 0x67, 0x65, 0x6d, 0x4c, 0x69,
	0x6e, 0x65, 0x75, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x63, 0x6b,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x65, 0x6d,
	0x44, 0x65, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x32, 0x0a, 0x0c, 0x67, 0x6f, 0x6c, 0x65,
	0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x6f, 0x6c, 0x65, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x0b, 0x67, 0x6f, 0x6c, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x12, 0x26, 0x0a, 0x0f,
	0x67, 0x6f, 0x6c, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x67, 0x6f, 0x6c, 0x65, 0x6d, 0x44, 0x65, 0x63, 0x6b,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x67,
	0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x47, 0x65, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x6c, 0x64, 0x5f, 0x63,
	0x6f, 0x69, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x6f, 0x6c, 0x64,
	0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x69, 0x6c,
	0x76, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x7f,
	0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x65, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64,
	0x12, 0x2d, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x6d, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x52, 0x09, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x65, 0x64, 0x22,
	0x45, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x65, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x67, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xed, 0x01, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x43, 0x6f,
	0x69, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x67, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x52, 0x04, 0x67, 0x65, 0x6d, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x67, 0x6f, 0x6c, 0x65,
	0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x6f, 0x6c, 0x65, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x52, 0x06, 0x67, 0x6f, 0x6c, 0x65, 0x6d,
	0x73, 0x12, 0x21, 0x0a, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04,
	0x68, 0x61, 0x6e, 0x64, 0x12, 0x30, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x70, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x61,
	0x72, 0x64, 0x50, 0x69, 0x6c, 0x65, 0x32, 0xbe, 0x01, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12,
	0x30, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x14, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x0d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x44, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x65, 0x6d, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x65, 0x6d, 0x43,
	0x61, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x19, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x65, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x5b, 0x0a, 0x22, 0x64, 0x65, 0x76, 0x2e, 0x6b,
	0x68, 0x79, 0x6d, 0x61, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x75,
	0x72, 0x79, 0x2d, 0x67, 0x6f, 0x6c, 0x65, 0x6d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x42, 0x11, 0x43,
	0x65, 0x6e, 0x74, 0x75, 0x72, 0x79, 0x47, 0x6f, 0x6c, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x5a, 0x22, 0x6b, 0x68, 0x79, 0x6d, 0x61, 0x6e, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x63, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x79, 0x2d, 0x67, 0x6f, 0x6c, 0x65, 0x6d, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_core_grpc_CenturyGolemEdition_proto_rawDescOnce sync.Once
	file_internal_core_grpc_CenturyGolemEdition_proto_rawDescData = file_internal_core_grpc_CenturyGolemEdition_proto_rawDesc
)

func file_internal_core_grpc_CenturyGolemEdition_proto_rawDescGZIP() []byte {
	file_internal_core_grpc_CenturyGolemEdition_proto_rawDescOnce.Do(func() {
		file_internal_core_grpc_CenturyGolemEdition_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_core_grpc_CenturyGolemEdition_proto_rawDescData)
	})
	return file_internal_core_grpc_CenturyGolemEdition_proto_rawDescData
}

var file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_internal_core_grpc_CenturyGolemEdition_proto_goTypes = []interface{}{
	(*GetCardMessage)(nil),      // 0: grpc.GetCardMessage
	(*GemValues)(nil),           // 1: grpc.GemValues
	(*GemCard)(nil),             // 2: grpc.GemCard
	(*GolemCard)(nil),           // 3: grpc.GolemCard
	(*CreateGameMessage)(nil),   // 4: grpc.CreateGameMessage
	(*CreateGameResponse)(nil),  // 5: grpc.CreateGameResponse
	(*GameState)(nil),           // 6: grpc.GameState
	(*PlayGemCardMessage)(nil),  // 7: grpc.PlayGemCardMessage
	(*PlayGemCardResponse)(nil), // 8: grpc.PlayGemCardResponse
	(*Player)(nil),              // 9: grpc.Player
}
var file_internal_core_grpc_CenturyGolemEdition_proto_depIdxs = []int32{
	1,  // 0: grpc.GemCard.in:type_name -> grpc.GemValues
	1,  // 1: grpc.GemCard.out:type_name -> grpc.GemValues
	1,  // 2: grpc.GolemCard.cost:type_name -> grpc.GemValues
	6,  // 3: grpc.CreateGameResponse.game_state:type_name -> grpc.GameState
	9,  // 4: grpc.GameState.other_players:type_name -> grpc.Player
	2,  // 5: grpc.GameState.gem_lineup:type_name -> grpc.GemCard
	3,  // 6: grpc.GameState.golem_lineup:type_name -> grpc.GolemCard
	1,  // 7: grpc.GameState.player_gems:type_name -> grpc.GemValues
	9,  // 8: grpc.GameState.player:type_name -> grpc.Player
	2,  // 9: grpc.PlayGemCardMessage.card:type_name -> grpc.GemCard
	1,  // 10: grpc.PlayGemCardMessage.discarded:type_name -> grpc.GemValues
	6,  // 11: grpc.PlayGemCardResponse.game_state:type_name -> grpc.GameState
	1,  // 12: grpc.Player.gems:type_name -> grpc.GemValues
	3,  // 13: grpc.Player.golems:type_name -> grpc.GolemCard
	2,  // 14: grpc.Player.hand:type_name -> grpc.GemCard
	2,  // 15: grpc.Player.discard_pile:type_name -> grpc.GemCard
	0,  // 16: grpc.Game.GetCard:input_type -> grpc.GetCardMessage
	4,  // 17: grpc.Game.NewGame:input_type -> grpc.CreateGameMessage
	7,  // 18: grpc.Game.PlayGemCard:input_type -> grpc.PlayGemCardMessage
	2,  // 19: grpc.Game.GetCard:output_type -> grpc.GemCard
	5,  // 20: grpc.Game.NewGame:output_type -> grpc.CreateGameResponse
	8,  // 21: grpc.Game.PlayGemCard:output_type -> grpc.PlayGemCardResponse
	19, // [19:22] is the sub-list for method output_type
	16, // [16:19] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_internal_core_grpc_CenturyGolemEdition_proto_init() }
func file_internal_core_grpc_CenturyGolemEdition_proto_init() {
	if File_internal_core_grpc_CenturyGolemEdition_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCardMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GemValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GemCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GolemCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGameMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayGemCardMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayGemCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_core_grpc_CenturyGolemEdition_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_core_grpc_CenturyGolemEdition_proto_goTypes,
		DependencyIndexes: file_internal_core_grpc_CenturyGolemEdition_proto_depIdxs,
		MessageInfos:      file_internal_core_grpc_CenturyGolemEdition_proto_msgTypes,
	}.Build()
	File_internal_core_grpc_CenturyGolemEdition_proto = out.File
	file_internal_core_grpc_CenturyGolemEdition_proto_rawDesc = nil
	file_internal_core_grpc_CenturyGolemEdition_proto_goTypes = nil
	file_internal_core_grpc_CenturyGolemEdition_proto_depIdxs = nil
}
